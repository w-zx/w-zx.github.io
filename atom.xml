<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://w-zx.github.io/</id>
    <title>An Odyssey</title>
    <updated>2021-01-16T15:39:04.135Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://w-zx.github.io/"/>
    <link rel="self" href="https://w-zx.github.io/atom.xml"/>
    <subtitle>愛よりも昔、孤悲の物語。</subtitle>
    <logo>https://w-zx.github.io/images/avatar.png</logo>
    <icon>https://w-zx.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, An Odyssey</rights>
    <entry>
        <title type="html"><![CDATA[Canvas绘制迷宫]]></title>
        <id>https://w-zx.github.io/post/draw-maze-with-canvas/</id>
        <link href="https://w-zx.github.io/post/draw-maze-with-canvas/">
        </link>
        <updated>2017-01-04T17:18:23.000Z</updated>
        <summary type="html"><![CDATA[<p>在生成迷宫的诸多方法里，有一种思路是假设迷宫初始状态是由长×宽个独立单元格构成的，每个单元格的东西南北四个方向都有可以挖掉的墙。生成迷宫的过程就是从起点开始，不断挖掉两个单元格之间的墙壁，并随机选择前进方向直到遍历全部单元格，这样就能保证起点和另外任何一个单元格都有通路存在，迷宫也就生成好了。</p>
]]></summary>
        <content type="html"><![CDATA[<p>在生成迷宫的诸多方法里，有一种思路是假设迷宫初始状态是由长×宽个独立单元格构成的，每个单元格的东西南北四个方向都有可以挖掉的墙。生成迷宫的过程就是从起点开始，不断挖掉两个单元格之间的墙壁，并随机选择前进方向直到遍历全部单元格，这样就能保证起点和另外任何一个单元格都有通路存在，迷宫也就生成好了。</p>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2019/12/25/KfwTxCFilesEvLU.jpg" alt="" loading="lazy"></figure>
<p>本文想介绍的是，在我们使用上述方法生成好描述迷宫的数据后，除了用字符在终端里输出外，还可以通过canvas方便且美观地在浏览器环境绘制迷宫。</p>
<h2 id="processing">Processing</h2>
<p>Processing是一种绘图语言，它在程序起始时运行一次初始化环境，然后不停循环draw()函数来描述动画每一帧要做什么。Processing设计思路和Arduino非常像，流程清晰可控而且易于上手。ProcessJS作为其衍生项目也继承了这种优点，你甚至可以直接在html里书写Java风格的代码，这提供了非常好的代码移植性，只要将代码放在<code>&lt;script type=&quot;text/processing&quot; data-processing-target=&quot;mycanvas&quot;&gt;&lt;/script&gt;</code>标签内即可。</p>
<h2 id="数据格式">数据格式</h2>
<p>我们绘图用的数据源是下面这种二维数组的形式：</p>
<pre><code class="language-python">[[2,4,14,10],
[5,10,3,3],
[2,3,1,3],
[5,13,12,9]]
</code></pre>
<p>这是一组回溯递归法产生的数据，首先定义每个单元格的东西南北4个方向为<code>N=1，S=2，W=4，E=8</code></p>
<figure data-type="image" tabindex="2"><img src="https://i.loli.net/2019/12/25/RbqZozE5vFPBXr9.jpg" alt="" loading="lazy"></figure>
<p>这样定义的原因是便于标记每一步的行走方向，1、2、4、8转换成二进制恰好是<code>0001</code>，<code>0010</code>，<code>0100</code>，<code>1000</code>的<code>One Hot</code>编码格式。比如说初始状态每个单元格都被标记为<code>0000</code>，然后我们向南走一步，就是用代表东的<code>0010</code>与初始状态<code>0000</code>作位或运算<code>0000|0010=0010</code>，得到<code>0010</code>作为新的状态，然后我们再向东走一步，<code>0010|1000=1010</code>，最终得到<code>1010</code>，我们就知道这个单元格曾经有南和东两个方向的路径。</p>
<h2 id="初始化绘图环境">初始化绘图环境</h2>
<p>下面介绍绘图环境的初始化：</p>
<pre><code class="language-java">void setup() {  
    sideLength = 301;
    size(sideLength, sideLength);
    background(255);
}
</code></pre>
<p>其中<code>size()</code>函数用来定义<code>canvas</code>画布大小，<code>background(255)</code>设置背景颜色为白色。由于迷宫是静止的，所以只需在在<code>click</code>事件里加一句回调<code>Processing.instances[0].maze(data);</code>运行一次自己定义的函数就好了。</p>
<p>我首先用淡色描出了迷宫的网格，这能让迷宫看起来规整一些。每次运行都要重新设置背景来清空上一次的图形，用<code>val || default_val</code>设置边长的默认参数，然后计算每个网格的宽度<code>step</code>。用<code>stroke()</code>设置线条颜色，<code>width</code>是存储<code>canvas</code>画布宽度的全局变量，<code>line(x1, y1, x2, y2)</code>画出一条从<code>(x1, y1)</code>到<code>(x2, y2)</code>的直线。这里要注意像素坐标原点在<code>canvas</code>的左上角<code>(0, 0)</code>，所以只能画到<code>width-1</code>的位置。</p>
<pre><code class="language-java">void maze(g) {  
    background(255);
    rows = $(&quot;#row&quot;).val() || 15;
    cols = rows;
    step = (width-1)/rows;
    stroke(137, 194, 148, 50);
    for(int i=0; i&lt;=width-1;) {
        line(i, 0, i, width-1);
        line(0, i, width-1, i);
        i+=step;
    }
}
</code></pre>
<h2 id="绘制迷宫">绘制迷宫</h2>
<p>然后就是根据数据绘制迷宫，因为正方形存在两对对称关系，当上方/左方的单元格开口方向确定后，相应的下方/右方单元格的开口就确定了，所以我们只需要处理每个单元格的<code>S</code>和<code>E</code>方向就行了，最后剩下迷宫的上边框和左边框没有处理，我们再画上两条长线。</p>
<p>与生成迷宫的或运算相反，如果某一格与<code>0010</code>（南）或运算的结果为<code>0 (g[i][j] &amp; 2) == 0)</code>，这说明生成这一格时并没有向南走，也就是说这一格南面有一堵墙，我们就在这一格下方画一条线<code>line(step*j, step*(i+1), step*(j+1), step*(i+1));</code>。</p>
<p>同理，如果<code>(g[i][j] &amp; 4) == 0)</code>，东面有墙时也是如此，当全部单元格都遍历到后，迷宫也就绘制完了。</p>
<h2 id="效果">效果</h2>
<p>全部代码如下：</p>
<pre><code class="language-java">stroke(0);  
line(0, 0, width, 0);
line(0, 0, 0, width);
for(int i=0; i&lt;=rows-1; i++) {
    for(int j=0; j&lt;=rows-1; j++) {
        if((g[i][j] &amp; 2) == 0) {
            line(step*j, step*(i+1), step*(j+1), step*(i+1));
        }
        if((g[i][j] &amp; 4) == 0) {
            line(step*(j+1), step*i, step*(j+1), step*(i+1));
        }
    }
}
</code></pre>
<p>具体效果可以在这里查看：</p>
<iframe width="100%" height="300" src="//jsfiddle.net/jfhy10zp/embedded/result,html" allowfullscreen="allowfullscreen" frameborder="0"></iframe>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yahoo翻译API的使用]]></title>
        <id>https://w-zx.github.io/post/yahoo-api/</id>
        <link href="https://w-zx.github.io/post/yahoo-api/">
        </link>
        <updated>2016-07-10T16:24:21.000Z</updated>
        <content type="html"><![CDATA[<p>在日语学习中比较困难的部分是记住日本汉字（Kanji）的发音，因为日本汉字不管训读还是音读都和现代汉语相应汉字的发音相差很多。而且日语中大量多音字、多音词组的存在使得对日本汉字的学习异常繁琐。</p>
<p>我一般会将不会读的汉字复制到Google翻译里，因为目前可用的在线翻译引擎中只有Google会提供准确的经过分词的罗马音标注，但是目前Google Translation API已经关闭公开访问了。经过艰难的搜寻，我最后选择了Yahoo日本提供的翻译API作为替代方案。</p>
<p>首先去Yahoo Developer Center注册一个账号，然后使用其提供的<u>ルビ振り</u>这个模块。先解释一下这个<u>ルビ振り</u>:</p>
<blockquote>
<p>give [print] kana alongside kanji [Chinese characters] (to show the letters' readings)，</p>
</blockquote>
<p>这个词读作<ruby><rb>ルビ<rt>rubi</ruby> <ruby><rb>振り<rt>furi</ruby>，有个html元素就叫<code>&lt;ruby&gt;</code>，它提供了一个文字注音的环境，其中<code>&lt;rb&gt;</code>是文字<code>&lt;rt&gt;</code>是其注音，在这个项目中，<code>&lt;ruby&gt;</code>元素起到了非常关键的作用。</p>
<p>账号注册成功得到一个ID，再回到ルビ振り这个页面，使用方法是<code>http://jlp.yahooapis.jp/FuriganaService/V1/furigana?appid=&lt;あなたのアプリケーションID&gt;&amp;sentence=出会え</code>这里只需要填写<code>appid</code>和<code>sentence</code>两个选项，那个<code>grade</code>（相应年级的注音完整度）会导致汉字的注音显示不全，所以就不设置了。</p>
<p>网络请求返回一堆xml数据：</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  
&lt;ResultSet xmlns=&quot;urn:yahoo:jp:jlp:FuriganaService&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;urn:yahoo:jp:jlp:FuriganaService http://jlp.yahooapis.jp/FuriganaService/V1/furigana.xsd&quot;&gt;  
  &lt;Result&gt;
    &lt;WordList&gt;
      &lt;Word&gt;
        &lt;Surface&gt;出会え&lt;/Surface&gt;
        &lt;Furigana&gt;であえ&lt;/Furigana&gt;
        &lt;Roman&gt;deae&lt;/Roman&gt;
        &lt;SubWordList&gt;
          &lt;SubWord&gt;
            &lt;Surface&gt;出会&lt;/Surface&gt;
            &lt;Furigana&gt;であ&lt;/Furigana&gt;
            &lt;Roman&gt;dea&lt;/Roman&gt;
          &lt;/SubWord&gt;
          &lt;SubWord&gt;
            &lt;Surface&gt;え&lt;/Surface&gt;
            &lt;Furigana&gt;え&lt;/Furigana&gt;
            &lt;Roman&gt;e&lt;/Roman&gt;
          &lt;/SubWord&gt;
        &lt;/SubWordList&gt;
      &lt;/Word&gt;
    &lt;/WordList&gt;
  &lt;/Result&gt;
&lt;/ResultSet&gt;  
</code></pre>
<p>首先，输入的语句被分词了，分出来的词语存放在<code>&lt;Word&gt;</code>里，<code>&lt;Surface&gt;</code>是原文，<code>&lt;Furigana&gt;</code>是假名标注，<code>&lt;Roman&gt;</code>是罗马音标注，值得注意的是，有的词语还会出现<code>&lt;SubWord&gt;</code>，这应该和日语语法有关，我还没弄懂，但是我不需要这个<code>&lt;SubWord&gt;</code>，所以首先要去除它。</p>
<p>关于跨域问题，可以使用jsonp方法，但是Yahoo日本没有给出json格式的返回值，导致js在分析返回的xml数据时会报错，所以jsonp就没办法用了。后来我查到可以使用Yahoo的YQL（此服务已停用，故下文方法失效，但思路类似）服务进行跨域的xml处理：</p>
<pre><code class="language-javascript">var sentence = $(&quot;#input&quot;).val();  
var url = 'http://jlp.yahooapis.jp/FuriganaService/V1/furigana?&amp;appid='+sentence;  
var yql = 'https://query.yahooapis.com/v1/public/yql?q=' + encodeURIComponent('select * from xml where url=&quot;' + url + '&quot;') + '&amp;format=xml';

$.ajax({
    url: yql,
    dataType: 'xml',
    success: function(data) {
    },
})
</code></pre>
<p>注意这里<code>dataType</code>一定要选<code>xml</code>。随后在<code>callback</code>里我要做下列几件事：</p>
<p>首先，去掉所有的<code>&lt;SubWord&gt;</code>，这里使用<code>remove()</code>方法就可以了：</p>
<pre><code class="language-javascript">var deleteSubword = $(data).find('SubWordList').each(function() {  
    $(this).remove();
});
</code></pre>
<p>其次，对于输入的标点符号，由于他们没有对应的<code>&lt;Roman&gt;</code>tag，所以注音部分要写入空白元素，如果找到<code>&lt;Roman&gt;</code>，就<code>document.createTextNode(romaji)</code>，并用<code>var rt = $(&quot;&lt;rt/&gt;&quot;);</code>生成一个node，把词组的romaji放进去，同理处理kanji，最后each遍历结束后：</p>
<pre><code class="language-javascript">.promise().done(function() {
    $(&quot;#output&quot;).html(ruby);
});
</code></pre>
<p>来更新输出内容。</p>
<p>项目全体代码如下：</p>
<pre><code class="language-javascript">var romaji = $(data).find('Word').each(function() {  
var romajinode = document.createTextNode(&quot;&quot;);  
if ($(this).find('Roman')) {  
    var romaji = $(this).find('Roman').text();
    romajinode = document.createTextNode(romaji);
}
    var kanji = $(this).find('Surface').text();
    var kanjinode = document.createTextNode(kanji);
    var rb = $(&quot;&lt;rb/&gt;&quot;);
    rb.append(kanjinode);
    ruby.append(rb);
    var rt = $(&quot;&lt;rt/&gt;&quot;);
    rt.append(romajinode);
    ruby.append(rt);
}).promise().done(function() {
    $(&quot;#output&quot;).html(ruby);
});
</code></pre>
<p>这个API存在的问题是，Yahoo日本作为一个日企对日语的解析居然不如Google，比如<code>私は</code>和<code>はい</code>中的<code>は</code>全部被标成了<code>ha</code>，另外技术上的问题就是返回数据类型是<code>xml</code>而不是<code>json</code>，处理使用起来不是那么方便。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[WordPress 插件 Hello Dolly 前台版]]></title>
        <id>https://w-zx.github.io/post/hello-dolly/</id>
        <link href="https://w-zx.github.io/post/hello-dolly/">
        </link>
        <updated>2014-12-09T10:10:59.000Z</updated>
        <summary type="html"><![CDATA[<p>WordPress 自带的 Hello Dolly 插件是 WordPress 的第一个插件，它的介绍是这样的：</p>
<blockquote>
<p>This is not just a plugin, it symbolizes the hope and enthusiasm of an entire generation summed up in two words sung most famously by Louis Armstrong.</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<p>WordPress 自带的 Hello Dolly 插件是 WordPress 的第一个插件，它的介绍是这样的：</p>
<blockquote>
<p>This is not just a plugin, it symbolizes the hope and enthusiasm of an entire generation summed up in two words sung most famously by Louis Armstrong.</p>
</blockquote>
<!-- more -->
<p>它的作用就是在后台界面的右上角随机显示一句音乐剧《俏红娘》的歌词，每次刷新页面后都会出现不同的歌词。大部分人可能会觉得这个插件没什么用，但我看到后一直有个想法，想把这个功能做到前台去，让每个浏览博客的人都能在右上角看到随机的一句我希望分享的文字，这看起来非常简洁也非常有趣。</p>
<p>要实现这个功能，需要修改插件的php文件：</p>
<pre><code class="language-php">// 将
add_action( 'admin_notices', 'hello_dolly' );
// 改为
add_action( 'wp_head', 'hello_dolly' );

// 将
add_action( 'admin_head', 'dolly_css' );
// 改为
add_action( 'wp_head', 'dolly_css' );
</code></pre>
<p>代码中的<code>$lyrics</code>变量用来保存文字，每行一句，自己可以随意添加。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[奥本海默]]></title>
        <id>https://w-zx.github.io/post/oppenheimer/</id>
        <link href="https://w-zx.github.io/post/oppenheimer/">
        </link>
        <updated>2014-01-24T11:29:16.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>《摩珂婆罗多经》中的《福者之歌》：「漫天奇光异彩，犹如圣灵逞威，只有千只太阳，始能与它争辉」</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>《摩珂婆罗多经》中的《福者之歌》：「漫天奇光异彩，犹如圣灵逞威，只有千只太阳，始能与它争辉」</p>
</blockquote>
<!-- more -->
<p>奥本海默核爆时的感言：<br>
We knew the world would not be the same<br>
我们知道世界不会和过去一样了<br>
A few people laughed<br>
少数人笑<br>
A few people cried,<br>
少数人哭泣<br>
Most people were silent.<br>
剩下的人都是沉默<br>
I remembered<br>
我记得<br>
The line from the Hindu scripture, the Bhagavad-Gita.<br>
那条印度教中的教义，那《大神圣歌》<br>
Vishnu is trying to persuade the Prince<br>
毗瑟努（三步神） 试着去说服王子<br>
That he should do his duty<br>
去尽他应尽的本分<br>
And to impress him<br>
为了让他铭记<br>
Takes on his multi-armed form and says,<br>
毗瑟努显现他的千臂然后说<br>
“Now I am become Death, the destroyer of worlds.”</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[哨兵]]></title>
        <id>https://w-zx.github.io/post/the-sentinel/</id>
        <link href="https://w-zx.github.io/post/the-sentinel/">
        </link>
        <updated>2014-01-24T10:07:16.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>“每次看到银河时，我都会这样想。”在《哨兵》中，他借叙述者的口说道，“没错，那层层叠叠的星云中，我们期待的使者正在向这里赶来。原谅我使用这么俗套的比喻吧，我们点燃了烽火，接下来所能做的就只有等待了。我想，我们不会等的太久的。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>“每次看到银河时，我都会这样想。”在《哨兵》中，他借叙述者的口说道，“没错，那层层叠叠的星云中，我们期待的使者正在向这里赶来。原谅我使用这么俗套的比喻吧，我们点燃了烽火，接下来所能做的就只有等待了。我想，我们不会等的太久的。</p>
</blockquote>
<!-- more -->
<p>Arthur C. Clarke</p>
<p>下一回你望着高挂南天的满月的时候，仔细看一看它的右边边缘，让你的视线沿着银盘的曲线向上移动。在凌晨两点钟光景，你会注意到一个暗淡的小椭圆：只要视力正常，谁都可以轻而易举找到它。这是一片诸山环绕的大平原，也是月球上最壮丽的平原之一，称为危海——危险之海。它的直径长达三百英里，几乎完全被巍峨的环状山脉所包围，从来没有人到那儿去考察，直到1996年夏末我们才进入那个平原。</p>
<p>考察团规模庞大。我们有两架重型运输机，从五百英里之外静海的月球中心基地运来了补给品和设备。还有三个小型火箭打算用于月面车无法通过的地区，作短程运输。幸运的是，危海的大部分地区十分平坦。在其他地方普遍存在着十分危险的大罅隙，但这里一个也没有，或大或小的陨石坑和山峦也很少。就我们所能判断的来说，我们想去哪里，高功率履带牵引车就可以毫无困难地把我们运送到哪里。</p>
<p>我是地质学家——或谓月球学家，假如你喜欢咬文嚼字的话——我领导考察危海南部地区的考察组。我们沿着大约十亿年前一度存在的古代海洋的海岸前进，绕过大山脚下的丘陵地带，用一星期时间穿越了危海南部地区一百英里的路程。当生命在地球上开始形成的时候，这里的生物已经处于来绝过程。当时水正从庞大而高耸的悬崖侧面上退落，注入月球空洞洞的心脏。在我们穿越的土地上，没有潮汐的海洋一度深达半英里，现在水汽留下的唯一痕迹就是有时候在灼热的阳光从未射入的洞穴里可以见到的一点白霜。</p>
<p>月球的黎明姗姗来迟，我们在拂晓早早出发，到黄昏降临之前还有近乎一星期的地球时间。我们每天下午五、六次穿着太空服下车到外面去寻找有趣的矿物，或者竖立一些标志作为未来旅行者的向导。一路平安无事。说起月球探索，没有什么危险，甚至没有特别振奋人心的事。我们可以在增压牵引车里舒舒服服住上一个月，倘若遇到麻烦，随时可以发送无线电求助，稳坐着耐心等待飞船来营救我们。</p>
<p>我刚才说了，探索月球没有什么振奋人心的事，这种说法当然不对。谁也不会看腻那些不可思议的高山，它们比地球上平缓的山峦要崎岖得多。当我们绕过远古海洋岬角和海角的时候，谁也不知道哪一种新的壮丽景观将展现在眼前。危海的整个南部新月形地带是一片广阔的三角洲，在那儿一度有二十来条河流汇入海洋，水源可能来自骤雨，这种倾盆大雨在月球年轻时期短暂的火山时代一定冲刷过那些山峦。每一条古老的河谷都是一种诱惑，吸引我们爬上对面未知的高地。但是我们还有一百英里路程要走，只能眼巴巴看着后人必须攀登的高地。</p>
<p>我们在牵引车里使用地球时间，就在22时整，最后一次无线电信息将发射给基地，我们这一天的工作便告结束。在牵引车外面，岩石仍然在近乎中天的太阳下灼灼发烧，但是对于我们来说，这是夜晚时分，直到八小时之后我们再度醒来为止。其后我们有一个人要做早餐，电动刮须刀将发出一片嗡嗡声，有人将打开收音机接收来自地球的短波无线电。确实，当油煎香肠的美味充满牵引车舱室的时候，有时很难相信我们不是在自己老家的世界上——一切都是那么正常，就像在家里一样，只是感到体重减轻，物体掉落慢吞吞的挺别扭。</p>
<p>这一天轮到我在用用厨房的主舱角落里做早餐。时隔多年，那一时刻还历历在目，因为无线电刚刚演播了我最喜爱的一首曲子，古老的威尔士歌曲《白岩石的戴维》。我们的司机已经穿上太空服出去检查牵引车的履带。我的助手路易斯·加尼特坐在前面控制室里，往昨天的考察日志里作一些过时的记录。</p>
<p>我像地球上任何一个家庭主妇那样站在油煎锅旁边等着香肠炸酥，悠闲地浏览着覆盖整个南部地平线的高山之墙，山墙在月球的半月形地带以下向东西伸展，消失在视线之外。这些高山距离牵引车似乎只有两三英里，但是我知道最近的山也有二十英里之遥。在月球上当然不会因为距离遥远而看不清远处物体的细节——完全没有地球上那种几乎觉察不到的雾气使得远处所有的物体变模糊，有时还变形。</p>
<p>那些山峦一万英尺高，它们挺立在平原上，似乎古代的地下喷发使它们穿出熔化的地壳突然升入空中。即便是最近处山峦的底部也被平原陡峭起伏的地面所隐蔽而看不见，因为月球是个挺小的世界，从我站立的地方看去，地平线只有二英里距离。</p>
<p>我举目望着从未有人攀登过的群山顶峰，这些山峰在地球人到来之前目睹过退缩的海洋缓慢地枯竭下去乃至完全消亡，使得这个世界丧失了希望和复苏的指望。阳光刺目，如火焰一般烧灼着壁垒森严的山峦，然而就在它们上空不远，星辰在比地球冬季午夜更加漆黑的空中发出稳定的光辉。</p>
<p>我转身离开的时候，看见在海中向西突出三十英里的一处大岬角山脊上有个金属在高处发出灿烂的光辉。这是一个没有面积的发光点，如同空中一颗明星被险峻的山峰捕获，我猜想太阳照在某个平滑的岩石表面上直接反射到我的眼中。这种事并不希奇。当月球处于公转的第二个四分之一路线的时候，地球上的观察者有时能看到风暴海的大山脉发出蓝白色荧光，这时阳光从山坡上发出耀眼光辉，从一个世界反射到另一个世界。但是我纳闷那上头是哪一种岩石能够发出这么明亮的光，于是我爬进观察塔，把四英雨望远镜旋转过来对准西方。</p>
<p>我看到的情景越发使我着急。山峰在视域里既清晰又突出，似乎只有半英里之遥，但是接收阳光的无论是什么东西，那物体还是太小了，分辨不清。然而那物体似乎有一种难以理解的对称美，它停息的顶峰又平坦得出奇。我长久盯着那个神秘的发光体，目不转睛地凝望着太空，直到不久以后厨房里传来的一股焦味使我猛醒到我们的早餐香肠已经徒劳地旅行了二十五万英里。</p>
<p>整个上午我们穿越危海的时候一路上争论不休，西方的山峦更加高耸，直指天庭。即便穿着太空服出去探矿的时候，我们也可以通过无线电继续议论纷纷。我的伙伴争辩说，月球上历来没有任何一种智能生物，这是绝对肯定的。在月球上生存过的生物仅仅是一些原始植物及其退化程度稍差一点的祖先。我像任何人一样了解这一种理论，但是有时候科学家必须有勇气当个傻瓜。</p>
<p>“听着，”我最后说道，“我要到那上头去，否则我无法安心。那座山不足一万二千英尺——在地球的引力下只有二千英尺——我可以在外面用二十小时徒步走完这段路程。反正我早就想进出，这给我一个极好的理由。”</p>
<p>“假如你没有摔死的话，”加尼特说，“咱们回基地的时候你将成为考察团的笑柄。从今以后那座山也许要称作威尔逊傻冒山了。”</p>
<p>“我才不会摔死呢，”我坚定地说。“是谁第一个爬上皮科山和赫利山的？”</p>
<p>“可是想当初你不是年轻得多吗？”路易斯亲切在问道。</p>
<p>“说到这一点，”我得意扬扬地说，“我就更有理由去咯。”</p>
<p>那天晚上我们把牵引车开到半英里之内的一个岬角，于是早早就寝。到了早晨，加尼特跟我一起走；他是个优秀登山运动员，以前常常跟我进行这种开拓性探险。我们的司机巴不得留下来看管牵引车。</p>
<p>乍一看，那些悬崖似乎完全无法攀登，但是对于任何具有攀高才能的人来说，在这个重量只有地球上正常值六分之一的世界上，爬爬山不在话下。在月球上登山，真正的危险在于过分自信；在月球上摔落六百英尺就像在地球上摔落一百英尺，完全可以置人于死地。</p>
<p>我们在平原上空大约四千英尺的一个宽阔的岩架上第一次歇息下来。攀登倒是不太难，但是我手脚发僵，不适应月球上的登山运动，我也乐得休息一下。我们还能见到牵引车停在悬崖脚下，远远看去如同一只微小的金属昆虫，我们向司机报告了进展情况，然后开始下一步的攀登。</p>
<p>我们的太空服内部十分凉爽，因为制冷装置抵御着猛烈的太阳，带走了身体劳顿散发的热量。我俩很少交谈，只是互相传递一下登山工具，商讨一下攀登的最佳计划。我不知道加尼特在想些什么，也许在想这是他所从事的最疯狂的徒劳搜索。我基本上同意他的这种想法，但是爬山乐趣无穷，心中想着前人未曾走过这条路线， 地面景色逐渐开阔，这一切给了我所需要的全部报偿。</p>
<p>当我见到我在三十英里之外作望远镜第一次观察过的那堵石墙就在面前的时候，我想我并没有特别兴奋。估计它高出我们头顶大约五十英尺，诱使我攀越这些不毛荒地的东西就在那边的平顶高原上。几乎可以肯定地说，那物体无非是一块远古陨石击碎的漂砾，它的断裂面在这无腐蚀、无变化的寂静世界上仍然鲜明发亮。</p>
<p>岩石表面上没有能用手抓住的东西，我们只好使用铁爪锚。我挥舞三叉金属锚在头顶上盘旋一阵，继而向上空的星星抛去，这时我两面三刀条疲惫的胳膊似乎恢复了力气。第一次铁爪锚没有抓牢，我拉回绳子，铁爪锚慢慢掉落下来。第三次试抛的时候，铁爪紧紧扣住了，即使我们俩的体重加在一起它也不会脱位。</p>
<p>加尼特焦急地望着我。我看得出他要先上去，但是我透过头盔的玻璃报他一笑，摇了摇头。我不慌不忙，开始慢慢攀登最后的高度。</p>
<p>即使穿着太空服，我在月球上也只有四十磅重，所以我一手接一手攀上去，干脆不用双脚帮忙，到了平顶的边缘，我停了下来，向我的伙伴挥挥手，继而攀缘上架，站直起来，凝望着前方。</p>
<p>你必须明白，直到此时此刻，我几乎完全相信自己在这上头发现不了什么奇异的或者不寻常的东西。我说几乎完全，不完完全全；正是萦绕心头的猜疑驱使我前进。喏，那物体现在再也不是一种令人猜疑不透的东西了，但是心头的迷惘才刚刚开始呢。</p>
<p>我站在高原上，离那物体大约一百英尺。它一度十分平滑——太平滑了就不自然——但是在不可估量的永世之中陨石的袭击使它变得坑坑洼洼，留下了累累伤痕。它有个平面可以反光，大致是个金字塔结构，有两个人那么高，像一颗多棱面的巨型钻石坐在岩石上。</p>
<p>开初几秒钟也许我心中压根儿没有充满什么感情。继而我感到激动万分，心中充满一种奇异的无法用语言表达的快乐。因为我爱月球，现在我知道了亚利斯塔山和伊雷托思恩山的蔓生地衣并不是月球年轻时期孕育的唯一生物。首批探险人员昔日的梦想虽然受人怀疑，但这一梦想是真实的。毕竟存在过月球文明——我是发现这一文明的第一人。我到月球上来，或许晚了一亿年，这没有使我感到懊丧：毕竟来了，这就好。</p>
<p>我的脑子开始正常思维，开始分析和提出问题。这是不是一座建筑物，一座神殿——或者是在我的语言中找不到名称的某种东西？倘若是一座建筑物，那么它为什么建造在这么特别难以到达的地点？我思忖着客观存在是不是一座庙宇，我想象到某些奇异祭司中的大能人呼唤神灵保佑他们，因为月球上的生物随着海洋的枯竭正在衰落，结果呼唤神灵也是徒劳。</p>
<p>我向前走了十来步以便更仔细地观察那物体，但是为谨慎起见，我不敢靠得太近。我懂一点考古学，试图猜测这一文明的文化水准，在古代，一定是这种文明削平了山头，创造了这些至今仍然令我目眩的反光镜面。</p>
<p>我想，可能是古埃及人干的，倘若他们的工匠拥有这些更为古老的建筑师所使用的任何一种奇异的材料的话。因为那物体不大，我没有考虑到我正在看着的东西可能是比人类更先进的某个种族的手工制品。月球一度拥有智能生物，这种思想仍然太离奇而难以领会，我的自傲使我无法作出最后的羞辱性的冒险尝试。</p>
<p>其后我注意到有个什么东西使我后脑勺的毛发直竖起来——那物体微乎其微又无关痛痒，多数人压根儿不会注意到它。我说过这片高原被陨石撞击得伤痕累累；高原上还覆盖着几英寸厚的宇宙尘。这种尘埃始终沉积在无风飘荡的任何一个世界的表面上。然而宇宙尘和陨石留下的痕迹在那个小小金字塔周围突然止步不前，留出一个宽阔的圆圈，仿佛有一堵无形的墙保护着小金字塔，使它免受岁月的侵袭和来自太空的缓慢而永不停息的轰击。</p>
<p>耳机里有人在呼唤，我明白加尼特已经叫我一阵子了。我蹒跚走到悬崖边缘，恐怕讲话不便，于是打打手势叫他爬上来。我向宇宙尘包围的圆圈走去，捡起一块碎裂的石片，向那个不可思议的小金字塔抛去。倘若这块石子在无形的屏障里消失，我是不会感到惊讶的，但是它似乎击中了一处平滑的半球形表面，轻轻地滑落到地上。</p>
<p>继而我知道我看到的东西方与人类的古代无法相比拟。这不是一座建筑物，而是一种机器，用万古千秋不灭的力量保护着自己。那些力量无论属于哪一种，仍然在发挥作用，也许我已经靠得太近了。我想到人在上一个世纪捕获和驯服了的所有放射物。就我所知，我可能只有死路一条，如同走近一个没有屏蔽的原子反应堆，步入致命的、寂静的辐射风之中。</p>
<p>我记得我转身看着加尼特，他已经走过来，站在我身边。在我看来他毫不在意，所以我没有惊动他，而是走到悬崖边缘尽力理一理自己的思绪。在我脚下展现着危海——它对于大多数人来说既奇异又神秘莫测，但是对我来说则了如指掌，我举目望着新月形的地球，它卧于繁星组成的摇篮之中，我思忖着当未知的创世主大功告成的时候地球云彩覆盖着什么。是不是石炭纪散发着蒸汽的原始森林？是不是最早的两栖动物从水中爬上来征服陆地所走过的凄凉海岸线？是不是更早的时候在生命到来之前永久的寂寥？</p>
<p>别问我干吗没有早一点猜到真相——这真相现在显得十分显而易见了。我发现那物体，心中一阵兴奋之后我想当然认为那块水晶般的神奇物体是月球远古时代某个种族制造的，但是我脑子里出现一闪念，以压倒一切的力量使我相信是如同我这样的外星人到月球上制造的。</p>
<p>在二十年之中我们在月球上找不到任何生物的踪迹，只有一些退化植物。月球不可能留有任何文明，无论这种文明是怎么毁灭的，唯有那物体标志着文明一度存在过。</p>
<p>我又一次望着反光的金字塔。它似乎更加远离与月球有关的任何物体了。突然我觉得自己由于兴奋和瞎起劲，爆发出一阵歇斯底里的傻笑，笑得浑身震颤起来：我居然想象那个小金字塔在跟我说话，说的是：“对不起，我自己在本地也是外来人。”</p>
<p>我们至今花了二十年功夫才打破那个无形屏障，走到水晶墙里边机器那儿。咱们无法理解的那个玩艺儿，人终于用原子能野蛮的力量把它炸毁了，现在我已经见到了我在山顶上发现的那个可爱反光体的碎片。</p>
<p>那些碎片毫无意义。金字塔的机械作用——假如是机械作用的话——属于地平线外遥远的技术，也许属于超物理力学的技术。</p>
<p>既然人已经到达了其他行星。这一秘密越发萦绕于我们心间，我们知道万古以来宇宙是只有地球是智能生物的住所。我们这个世界任何消失了的文明也不可能建造出那个机器，加为陨落在高原上的宇宙尘的厚度使我们能够测出它的年代。那个机器是在生命从地球海洋上出现之前就设置在高山上的。</p>
<p>当咱们的世界是现有年龄一半的时候，外星来客穿越了太阳系，在月球上留下了旅行的标志，继续他们的行程。在人炸毁这一标志之前，那个机器仍然在履行着它的建造者的意图。至于意图何在，下面是我的猜测。</p>
<p>在银河系之中近乎一千亿个星球在旋转着。很久以前其他太阳的世界上必有其他种族攀登并超越我们已经到达的高度。想一想这样的文明，万古以前在神创造万物的余辉映衬下，某个宇宙的主人们非常年轻，因此生命仅仅来到一小撮世界观上。他们的世界必定是我们无法想象的一片寂寥，诸神望着无穷大的空间觉得没有一个人可以分享他们的思想。</p>
<p>他们一定搜寻过各个星团，如同我们搜寻了行星。到处都有世界，但是这些世界要么空空如也，要么栖息着没有思想的爬行生物。在咱们的地球上，巨大的火山仍然在喷发着浓烟，污染着天空，那时黎明人的第一艘飞船从冥王星外面的深渊里飞驰而来，它经过冰冷的外部世界，知道生命在这些世界的命运中不可能起任何作用。飞船停靠在内部行星上，他们借助太阳火取暖，等着开始他们的用为。</p>
<p>那些太空漫游者一定看上了地球，在火与冰之间狭窄的区域里安全地绕了几周，一度猜想地球是太阳诸子当中最受宠爱的一个。在遥远的未来这里将有生命；但是在他们面前还有无数星球，他们可能从此不再光顾地球。</p>
<p>因此他们留下一个哨兵，这是他们散布在整个宇宙中的千百万个哨兵之一，这些哨兵以生命的许诺守护着所有的世界。它是一座灯塔，万古以来耐心地发射着无人发现的信号。</p>
<p>或许你现在明白了那个水晶金字塔干吗设置在月球上而不设在地球上。它的建造者并不关注仍然在野蛮状态中苦苦挣扎的种族。只有当有穿越太空，逃离人的摇篮地球，以此证明自己适合于生存下去的时候，他们才会对我们的文明感兴趣。这就是所有智能种族迟早要遇到的挑战。这是一种双重挑战，因为反过来，这取决于对原子能的征服和生死之间最后的选择。</p>
<p>一旦走出这一危机，我们找到那个金字塔并迫使它打开就只是时间问题了。现在它的信号停息了，那些值勤的人将会把心思转向地球。或许他们希望帮助我们发展幼稚的文明。但他们必定非常非常老迈，可惜老年人往往强头倔脑嫉妒年轻人。</p>
<p>每次望向银河时，我都会这样想。没错，那层层叠叠的星云中，我们期待的使者正在向这里赶来。原谅我使用这么俗套的比喻吧，我们点燃了烽火，接下来所能做的就只有等待了。</p>
<p>我想，我们不会等的太久的。</p>
]]></content>
    </entry>
</feed>